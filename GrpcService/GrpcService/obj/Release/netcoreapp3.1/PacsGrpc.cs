// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/pacs.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class PACS
  {
    static readonly string __ServiceName = "pacs.PACS";

    static readonly grpc::Marshaller<global::GrpcService.NewUserRequest> __Marshaller_pacs_NewUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.NewUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.NewUserReply> __Marshaller_pacs_NewUserReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.NewUserReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.RewriteUserRequest> __Marshaller_pacs_RewriteUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.RewriteUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.RewriteUserReply> __Marshaller_pacs_RewriteUserReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.RewriteUserReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.DeleteUserRequest> __Marshaller_pacs_DeleteUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.DeleteUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.DeleteUserReply> __Marshaller_pacs_DeleteUserReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.DeleteUserReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.ShowHistoryRequest> __Marshaller_pacs_ShowHistoryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.ShowHistoryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.ShowHistoryReply> __Marshaller_pacs_ShowHistoryReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.ShowHistoryReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.ShowAllowedRequest> __Marshaller_pacs_ShowAllowedRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.ShowAllowedRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.ShowAllowedReply> __Marshaller_pacs_ShowAllowedReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.ShowAllowedReply.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcService.NewUserRequest, global::GrpcService.NewUserReply> __Method_CreateUser = new grpc::Method<global::GrpcService.NewUserRequest, global::GrpcService.NewUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateUser",
        __Marshaller_pacs_NewUserRequest,
        __Marshaller_pacs_NewUserReply);

    static readonly grpc::Method<global::GrpcService.RewriteUserRequest, global::GrpcService.RewriteUserReply> __Method_RewriteUser = new grpc::Method<global::GrpcService.RewriteUserRequest, global::GrpcService.RewriteUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RewriteUser",
        __Marshaller_pacs_RewriteUserRequest,
        __Marshaller_pacs_RewriteUserReply);

    static readonly grpc::Method<global::GrpcService.DeleteUserRequest, global::GrpcService.DeleteUserReply> __Method_DeleteUser = new grpc::Method<global::GrpcService.DeleteUserRequest, global::GrpcService.DeleteUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUser",
        __Marshaller_pacs_DeleteUserRequest,
        __Marshaller_pacs_DeleteUserReply);

    static readonly grpc::Method<global::GrpcService.ShowHistoryRequest, global::GrpcService.ShowHistoryReply> __Method_ShowHistory = new grpc::Method<global::GrpcService.ShowHistoryRequest, global::GrpcService.ShowHistoryReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ShowHistory",
        __Marshaller_pacs_ShowHistoryRequest,
        __Marshaller_pacs_ShowHistoryReply);

    static readonly grpc::Method<global::GrpcService.ShowAllowedRequest, global::GrpcService.ShowAllowedReply> __Method_ShowAllowed = new grpc::Method<global::GrpcService.ShowAllowedRequest, global::GrpcService.ShowAllowedReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ShowAllowed",
        __Marshaller_pacs_ShowAllowedRequest,
        __Marshaller_pacs_ShowAllowedReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService.PacsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PACS</summary>
    [grpc::BindServiceMethod(typeof(PACS), "BindService")]
    public abstract partial class PACSBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.NewUserReply> CreateUser(global::GrpcService.NewUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.RewriteUserReply> RewriteUser(global::GrpcService.RewriteUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.DeleteUserReply> DeleteUser(global::GrpcService.DeleteUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ShowHistory(global::GrpcService.ShowHistoryRequest request, grpc::IServerStreamWriter<global::GrpcService.ShowHistoryReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ShowAllowed(global::GrpcService.ShowAllowedRequest request, grpc::IServerStreamWriter<global::GrpcService.ShowAllowedReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PACSBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateUser, serviceImpl.CreateUser)
          .AddMethod(__Method_RewriteUser, serviceImpl.RewriteUser)
          .AddMethod(__Method_DeleteUser, serviceImpl.DeleteUser)
          .AddMethod(__Method_ShowHistory, serviceImpl.ShowHistory)
          .AddMethod(__Method_ShowAllowed, serviceImpl.ShowAllowed).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PACSBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.NewUserRequest, global::GrpcService.NewUserReply>(serviceImpl.CreateUser));
      serviceBinder.AddMethod(__Method_RewriteUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.RewriteUserRequest, global::GrpcService.RewriteUserReply>(serviceImpl.RewriteUser));
      serviceBinder.AddMethod(__Method_DeleteUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.DeleteUserRequest, global::GrpcService.DeleteUserReply>(serviceImpl.DeleteUser));
      serviceBinder.AddMethod(__Method_ShowHistory, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcService.ShowHistoryRequest, global::GrpcService.ShowHistoryReply>(serviceImpl.ShowHistory));
      serviceBinder.AddMethod(__Method_ShowAllowed, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcService.ShowAllowedRequest, global::GrpcService.ShowAllowedReply>(serviceImpl.ShowAllowed));
    }

  }
}
#endregion
